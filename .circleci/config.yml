# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

references:
  install_dependencies: &install_dependencies
    run:
      name: install dependencies
      command: |
        sudo apt-get install libgmp3-dev
        python3 -m venv venv
        . venv/bin/activate
        pip install -r requirements.txt
        pip install -e .[test,dev]
  docker: &docker
    docker:
      - image: circleci/python:3.6.4

  restore_cache: &restore_cache
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "requirements.txt" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

jobs:
  build:
    <<: *docker

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - *restore_cache

      - *install_dependencies

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            flake8 nekoyume/
            coverage run -m pytest --doctest-modules
            codecov --token=382fccb2-35b2-4861-ba06-56db19f2c36d

      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - setup_remote_docker

      - run:
          name: Run Docker Compose
          command: |
            docker-compose build
            docker-compose up -d
            docker-compose down

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deploy:
    <<: *docker

    steps:
      - checkout
      - run:
          name: Install wheel
          command: |
            pip install wheel
      - run:
          name: Setup pypirc
          command: |
            # Configure pypirc
            echo '[server-login]'                                       >> ~/.pypirc;
            echo "username: $PYPI_USERNAME"                             >> ~/.pypirc;
            echo "password: $PYPI_PASSWORD"                             >> ~/.pypirc;
      - *install_dependencies
      - run:
          name: Upload
          command: |
            python3 setup.py sdist bdist_wheel upload

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:  # required since `deploy` has tag filters AND requires `build`
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /.+/
            branches:
              ignore: /.*/
